package presentation;

import javax.swing.*;
import javax.swing.table.*;
import javax.swing.border.*;
import dao.*;
import daoMySQL.*;
import factory.*;
import java.awt.*;
import java.beans.*;
import java.util.*;
import model.*;
import transfertObject.*;
import java.util.regex.*;
/**
 *
 * @author Philippe-K
 */

public class JIFReservations extends JInternalFrame
{
    /**
     * Creates new form JIFReservations
     */
    public JIFReservations()
    {
        initComponents();
        fillComponents();
        setLocation(400, 200);
    }
    
    private void fillComponents()
    {
        ArrayList<Chambre> listeCh = daoCh.selectChambres();
        
        // Ajoute une chambre particulière : 0 signifie toutes les chambres
        listeCh.add(0, new Chambre(0, false, false, false, 0));
        
        for(Chambre ch : listeCh)
        {
            // Insertion des objets dans la comboBox,
            // Mais ils sont affichés grâce à leurs méthodes
            jComboBoxChambre.addItem(ch);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new javax.swing.JPanel();
        jLabelNewReservation = new javax.swing.JLabel();
        jButtonAjouter = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jLabelNom = new javax.swing.JLabel();
        jTextFieldFiltreNom = new javax.swing.JTextField();
        jLabelNumChambre = new javax.swing.JLabel();
        jComboBoxChambre = new javax.swing.JComboBox();
        jLabelDateDeb = new javax.swing.JLabel();
        jDateChooserDeb = new com.toedter.calendar.JDateChooser();
        jLabelHome = new javax.swing.JLabel();
        jLabelReset = new javax.swing.JLabel();
        jButtonHome = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jLabelDateFin = new javax.swing.JLabel();
        jDateChooserFin = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableRes = new JTable(myModel);

        setBorder(null);
        setTitle("Réservations");
        setVisible(true);

        jPanelMain.setBackground(new java.awt.Color(153, 204, 255));

        jLabelNewReservation.setFont(new java.awt.Font("Tahoma", 1, 32)); // NOI18N
        jLabelNewReservation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNewReservation.setText("Gestion des réservations");
        jLabelNewReservation.setFocusable(false);
        jLabelNewReservation.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButtonAjouter.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonAjouter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/insert.png"))); // NOI18N
        jButtonAjouter.setText("Ajouter");
        jButtonAjouter.setPreferredSize(new java.awt.Dimension(170, 59));
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jButtonModifier.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonModifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/update.png"))); // NOI18N
        jButtonModifier.setText("Modifier");
        jButtonModifier.setPreferredSize(new java.awt.Dimension(170, 59));
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jButtonSupprimer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonSupprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/delete.png"))); // NOI18N
        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.setPreferredSize(new java.awt.Dimension(170, 59));
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jLabelNom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelNom.setText("Recherche par nom :");

        jTextFieldFiltreNom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldFiltreNomFocusGained(evt);
            }
        });
        jTextFieldFiltreNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldFiltreNomKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldFiltreNomKeyTyped(evt);
            }
        });

        jLabelNumChambre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelNumChambre.setText("Chambre :");

        jComboBoxChambre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxChambreActionPerformed(evt);
            }
        });

        jLabelDateDeb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelDateDeb.setText("Date de début :");

        jDateChooserDeb.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooserDebPropertyChange(evt);
            }
        });

        jLabelHome.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelHome.setText("Home");

        jLabelReset.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelReset.setText("Reset");

        jButtonHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/home.png"))); // NOI18N
        jButtonHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHomeActionPerformed(evt);
            }
        });

        jButtonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/reset.png"))); // NOI18N
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jLabelDateFin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelDateFin.setText("Date de fin :");

        jDateChooserFin.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooserFinPropertyChange(evt);
            }
        });

        jTableRes.setRowSorter(sorter);
        //taille automatique
        jTableRes.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

        //on centre les titres des colonnes
        DefaultTableCellRenderer custom = new DefaultTableCellRenderer(); 
        custom.setHorizontalAlignment(JLabel.CENTER);
        jTableRes.getTableHeader().setDefaultRenderer(custom);

        //on centre le texte
        for(int i = 0; i < jTableRes.getColumnCount() ; i++){ 
            jTableRes.getColumnModel().getColumn(i).setCellRenderer(custom);
        }

        //Border sur le Header
        jTableRes.getTableHeader().setBorder(new EtchedBorder());

        //afficher les lignes verticales
        jTableRes.setShowVerticalLines(true);
        jTableRes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableResMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableRes);

        javax.swing.GroupLayout jPanelMainLayout = new javax.swing.GroupLayout(jPanelMain);
        jPanelMain.setLayout(jPanelMainLayout);
        jPanelMainLayout.setHorizontalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMainLayout.createSequentialGroup()
                        .addComponent(jButtonAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(144, 144, 144)
                        .addComponent(jButtonModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(157, 157, 157)
                        .addComponent(jButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDateDeb, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelNom, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldFiltreNom)
                            .addComponent(jDateChooserDeb, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNumChambre, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelDateFin, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxChambre, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelMainLayout.createSequentialGroup()
                                .addComponent(jDateChooserFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(44, 44, 44))))
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addComponent(jLabelHome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonHome, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(526, 526, 526)
                        .addComponent(jLabelReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(44, 44, 44))
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addComponent(jLabelNewReservation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addComponent(jScrollPane2)
        );
        jPanelMainLayout.setVerticalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelNewReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jLabelHome))
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelMainLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabelReset))
                            .addComponent(jButtonReset)
                            .addComponent(jButtonHome))))
                .addGap(18, 18, 18)
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldFiltreNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNom)
                    .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelNumChambre)
                        .addComponent(jComboBoxChambre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDateFin)
                    .addComponent(jDateChooserFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDateDeb)
                    .addComponent(jDateChooserDeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed
        // Récupération de la JFrame parente
        JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
        new JDAjoutReservation(parent, "Insertion d'une nouvelle réservation");

        // après l'insertion : rafraîchir les données en relisant la BD
        refreshModel();
    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        if(jTableRes.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(this, "Sélectionnez d'abord une ligne svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            // Cela renvoie l'objet Client à passer en paramètre
            Reservation res = myModel.getMyList(jTableRes.convertRowIndexToModel(jTableRes.getSelectedRow()));

            // il récupère la JFrame parente
            JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
            new JDModifReservation(parent, "Modification d'une réservation", res);

            // après la modification : rafraîchir les données en relisant la BD
            refreshModel();
        }
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        if(jTableRes.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(null, "Sélectionnez d'abord une ligne svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            int rep = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer la réservation de " 
                      + myModel.getValueAt(jTableRes.convertRowIndexToModel(jTableRes.getSelectedRow()), 2)
                      + " " + myModel.getValueAt(jTableRes.convertRowIndexToModel(jTableRes.getSelectedRow()), 1) + " ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if(rep == JOptionPane.YES_OPTION)
            {
                daoRes.deleteReservation((int)myModel.getValueAt(jTableRes.convertRowIndexToModel(jTableRes.getSelectedRow()), 0));
            }

            // après la suppression : rafraîchir les données en relisant la BD
            refreshModel();
        }
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jTextFieldFiltreNomFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldFiltreNomFocusGained
        jTextFieldFiltreNom.setText("");
    }//GEN-LAST:event_jTextFieldFiltreNomFocusGained

    private void jTextFieldFiltreNomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFiltreNomKeyReleased
        RowFilter<TableModelReservation, Integer> rf = null;
        try
        {
            rf = RowFilter.regexFilter("^(?i)" + jTextFieldFiltreNom.getText(), 1);
        }
        catch(PatternSyntaxException e){return;}
        sorter.setRowFilter(rf);
    }//GEN-LAST:event_jTextFieldFiltreNomKeyReleased

    private void jTextFieldFiltreNomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFiltreNomKeyTyped
        if(evt.getKeyChar() == '-')
        {
            if(jTextFieldFiltreNom.getText().contains("-") || jTextFieldFiltreNom.getText().equals(""))
            {
                evt.consume();
            }
        }
        else
        {
            if(!Character.isLetter(evt.getKeyChar()))
            {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextFieldFiltreNomKeyTyped

    private void jComboBoxChambreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxChambreActionPerformed
        refreshModel();
    }//GEN-LAST:event_jComboBoxChambreActionPerformed

    private void jButtonHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHomeActionPerformed
        this.dispose();
        new JFPrincipale().setVisible(true);
        setSize(833, 530);
    }//GEN-LAST:event_jButtonHomeActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        myModel.setMyList(daoRes.selectReservations());
        jTextFieldFiltreNom.setText("");
        jComboBoxChambre.setSelectedIndex(0);
        jDateChooserDeb.setDate(daoPl.selectDateMin());
        jDateChooserFin.setDate(null);
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jDateChooserDebPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserDebPropertyChange
        refreshModel();
    }//GEN-LAST:event_jDateChooserDebPropertyChange

    private void jDateChooserFinPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserFinPropertyChange
        refreshModel();
    }//GEN-LAST:event_jDateChooserFinPropertyChange

    private void jTableResMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableResMouseClicked
        if(evt.getClickCount() == 2)
        {
            // renvoie l'objet Client à passer en paramètre
            Reservation r = myModel.getMyList(jTableRes.convertRowIndexToModel(jTableRes.getSelectedRow()));

            // récupère la JFrame parente
            JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
            new JDModifReservation(parent, "Modification d'une réservation", r);

            // après la modification : rafraîchir les données en relisant la BD
            refreshModel();
        }
    }//GEN-LAST:event_jTableResMouseClicked
    
    private void refreshModel()
    {
        Chambre selectedCh = (Chambre)jComboBoxChambre.getSelectedItem();
        Date minDate = jDateChooserDeb.getDate();
        Date maxDate = jDateChooserFin.getDate();

        if(selectedCh != null && minDate != null && maxDate != null)
        {
            myModel.setMyList(daoRes.selectReservations(selectedCh.getCh_Num(), minDate, maxDate));
        }
        else if(selectedCh != null)
        {
            myModel.setMyList(daoRes.selectReservations(selectedCh.getCh_Num()));
        }
        else if(minDate != null && maxDate != null)
        {
            myModel.setMyList(daoRes.selectReservations(minDate, maxDate));
        }
        else
        {
            myModel.setMyList(daoRes.selectReservations());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JButton jButtonHome;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JComboBox jComboBoxChambre;
    private com.toedter.calendar.JDateChooser jDateChooserDeb;
    private com.toedter.calendar.JDateChooser jDateChooserFin;
    private javax.swing.JLabel jLabelDateDeb;
    private javax.swing.JLabel jLabelDateFin;
    private javax.swing.JLabel jLabelHome;
    private javax.swing.JLabel jLabelNewReservation;
    private javax.swing.JLabel jLabelNom;
    private javax.swing.JLabel jLabelNumChambre;
    private javax.swing.JLabel jLabelReset;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableRes;
    private javax.swing.JTextField jTextFieldFiltreNom;
    // End of variables declaration//GEN-END:variables
    private DAOReservation daoRes = Factory.getDAOReservation();
    private DAOClient daoCli = Factory.getDAOClient();
    private DAOChambre daoCh = Factory.getDAOChambre();
    private DAOPlanning daoPl = Factory.getDAOPlanning();
    private TableModelReservation myModel = new TableModelReservation(daoRes.selectReservations());
    private TableRowSorter<TableModelReservation> sorter = new TableRowSorter<TableModelReservation>(myModel);
}