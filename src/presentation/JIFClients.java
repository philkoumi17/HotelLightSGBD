package presentation;

import javax.swing.*;
import javax.swing.table.*;
import javax.swing.border.*;
import dao.*;
import daoMySQL.*;
import factory.*;
import model.*;
import transfertObject.*;
import java.util.regex.*;
/**
 *
 * @author Philippe-K
 */

public class JIFClients extends JInternalFrame
{
    /**
     * Creates new form JIFClient
     */
    public JIFClients()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new javax.swing.JPanel();
        jLabelNewStudent = new javax.swing.JLabel();
        jButtonAjouter = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClients = new JTable(myModel);

        setBorder(null);
        setTitle("Clients");
        setVisible(true);

        jPanelMain.setBackground(new java.awt.Color(153, 204, 255));

        jLabelNewStudent.setFont(new java.awt.Font("Tahoma", 1, 32)); // NOI18N
        jLabelNewStudent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNewStudent.setText("Gestion des clients");
        jLabelNewStudent.setFocusable(false);
        jLabelNewStudent.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButtonAjouter.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonAjouter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/add.png"))); // NOI18N
        jButtonAjouter.setText("Ajouter");
        jButtonAjouter.setPreferredSize(new java.awt.Dimension(170, 59));
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jButtonModifier.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonModifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/edit.png"))); // NOI18N
        jButtonModifier.setText("Modifier");
        jButtonModifier.setPreferredSize(new java.awt.Dimension(170, 59));
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jButtonSupprimer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonSupprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/delete.png"))); // NOI18N
        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.setPreferredSize(new java.awt.Dimension(170, 59));
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        //taille automatique
        jTableClients.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

        //on centre les titres des colonnes
        DefaultTableCellRenderer custom = new DefaultTableCellRenderer(); 
        custom.setHorizontalAlignment(JLabel.CENTER);
        jTableClients.getTableHeader().setDefaultRenderer(custom);

        //on centre le texte
        for(int i = 0; i < jTableClients.getColumnCount() ; i++){ 
            jTableClients.getColumnModel().getColumn(i).setCellRenderer(custom);
        }

        //Border sur le Header
        jTableClients.getTableHeader().setBorder(new EtchedBorder());

        //afficher les lignes verticales
        jTableClients.setShowVerticalLines(true);
        jTableClients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableClients);

        javax.swing.GroupLayout jPanelMainLayout = new javax.swing.GroupLayout(jPanelMain);
        jPanelMain.setLayout(jPanelMainLayout);
        jPanelMainLayout.setHorizontalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNewStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addComponent(jButtonAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(jButtonModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(jButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanelMainLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonAjouter, jButtonSupprimer});

        jPanelMainLayout.setVerticalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabelNewStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed
        // Récupération de la JFrame parente
        JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
        new JDAjoutClient(parent, "Insertion d'un client");

        // après l'insertion : rafraîchir les données en relisant la BD
        refreshModel();
    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        if(jTableClients.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(this, "Sélectionnez d'abord une ligne svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            // Cela renvoie l'objet Client à passer en paramètre
            Client cli = myModel.getMyList(jTableClients.convertRowIndexToModel(jTableClients.getSelectedRow()));

            // il récupère la JFrame parente
            JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
            new JDModifClient(parent, "Modification d'un client", cli);

            // après la modification : rafraîchir les données en relisant la BD
            refreshModel();
        }
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        if(jTableClients.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(null, "Sélectionnez d'abord une ligne svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            int rep = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment supprimer le client " 
                      + myModel.getValueAt(jTableClients.convertRowIndexToModel(jTableClients.getSelectedRow()), 2)
                      + " " + myModel.getValueAt(jTableClients.convertRowIndexToModel(jTableClients.getSelectedRow()), 1)
                      + " ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if(rep == JOptionPane.YES_OPTION)
            {
                daoCli.deleteClient((int)myModel.getValueAt(jTableClients.convertRowIndexToModel(jTableClients.getSelectedRow()), 0));
                JOptionPane.showMessageDialog(this, "Opération de suppression réussie !", "Message", JOptionPane.INFORMATION_MESSAGE, frameIcon);
            }

            // après la suppression : rafraîchir les données en relisant la BD
            refreshModel();
        }
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jTableClientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientsMouseClicked
        if(evt.getClickCount() == 2)
        {
            // renvoie l'objet Client à passer en paramètre
            Client cli = myModel.getMyList(jTableClients.convertRowIndexToModel(jTableClients.getSelectedRow()));

            // récupère la JFrame parente
            JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
            new JDModifClient(parent, "Modification d'un client", cli);

            // après la modification : rafraîchir les données en relisant la BD
            refreshModel();
        }
    }//GEN-LAST:event_jTableClientsMouseClicked
    
    private void refreshModel()
    {
        myModel.setMyList(daoCli.selectClients());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JLabel jLabelNewStudent;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableClients;
    // End of variables declaration//GEN-END:variables
    private DAOClient daoCli = Factory.getDAOClient();
    private TableModelClients myModel = new TableModelClients(daoCli.selectClients());
}